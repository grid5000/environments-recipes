#==============================================================================
# vim: softtabstop=2 shiftwidth=2 expandtab fenc=utf-8 cc=81 tw=80
#==============================================================================
#
# DESCRIPTION: Kadeploy3 ramdisk OS (used in the deployment phase)
#
#==============================================================================
---
extend: kadeploy3-deploy-kernel-base-docker.yaml
# Global variables use by Kameleon engine and the steps
global:
  release: bullseye
  bootstrap_packages: initramfs-tools busybox gnupg dirmngr
  to_remove_packages: wget libpsl5
  use_backports: no
  security_release: $${release}-security
  arch: aarch64
  deb_arch: arm64
  deb_kernel_arch: $${deb_arch}
  deb_kernel: other
  arch_specific_packages: kexec-tools grub-efi-arm64 
  #  out_context_docker_image: l4t3531deb11

  ubuntu_deb_url_dpkg: http://ports.ubuntu.com/ubuntu-ports/pool/main/d/dpkg/dpkg_1.19.7ubuntu3.2_arm64.deb
  #ubuntu_deb_url_l4t_apt_source: https://repo.download.nvidia.com/jetson/t194/pool/main/n/nvidia-l4t-apt-source/nvidia-l4t-apt-source_35.2.1-20230124153320_arm64.deb
  ubuntu_deb_url_l4t_apt_source: https://repo.download.nvidia.com/jetson/t194/pool/main/n/nvidia-l4t-apt-source/nvidia-l4t-apt-source_35.3.1-20230319081403_arm64.deb
  l4t_kernel_packages: nvidia-l4t-firmware nvidia-l4t-xusb-firmware
  l4t_kernel_version: 5.10.104-tegra
  cti_BSP_url: https://connecttech.com/ftp/Drivers/CTI-L4T-AGX-35.3.1-V001.tgz
  cti_kernel_package: nvidia-l4t-kernel_$${l4t_kernel_version}-*_arm64.deb

bootstrap:
  - "@base"

setup:
  - "@base"
  - nvidia_l4t_specific:
    # We install Ubuntu/L4T packages for the Linux kernel and
    # dependences. Well not really install, just extracting file from packages to
    # avoid dependency issues between Debian and Ubuntu/L4T.
    # Some Ubuntu deb packages uses zstd internally instead of gz, which makes
    # them not compatible with Debian's dpkg-deb tool. We need to install
    # Ubuntu's one. Fortunately the deb package of Ubuntu's dpkg is compatible
    # with Debian's dpkg however.
    - install_utils:
      - apt-get_in: install wget pv
    - install_ubuntu_dpkg:
      - on_checkpoint: disabled
      - exec_in: |
          set -e
          mkdir -p deb ubuntu
          # apt download fails if _apt cannot access the download location
          chown _apt deb
          chmod 755 /root
          wget $${ubuntu_deb_url_dpkg} -O deb/dpkg-ubuntu.deb
          dpkg-deb -x deb/dpkg-ubuntu.deb ubuntu
          rm deb/dpkg-ubuntu.deb
    - install_nvidia_l4t_source:
      - exec_in: |
          set -e
          wget $${ubuntu_deb_url_l4t_apt_source} -O deb/l4t-apt-source.deb
          ubuntu/usr/bin/dpkg-deb -x deb/l4t-apt-source.deb ubuntu
          rm deb/l4t-apt-source.deb
          cp -av ubuntu/etc/apt /etc/
          # Force the SoC id (tegra AGX Xavier)
          sed -i -e 's/<SOC>/t194/' /etc/apt/sources.list.d/nvidia-l4t-apt-source.list
    - update_packages_list:
      - apt-get_in: update
    - download_kernel_firmware:
      - exec_in: |
          (cd deb; apt-get download $${l4t_kernel_packages})
    - unpack_kernel_package_from_cti_BSP:
      - exec_in: |
          set -e
          wget --progress=dot:giga $${cti_BSP_url} -O deb/cti_BSP.tgz
          tar -C deb/ --strip-components=2 --wildcards -zxvf deb/cti_BSP.tgz CTI-L4T/kernel/$${cti_kernel_package}
          rm deb/cti_BSP.tgz
    - unpack_kernel_and_firmware:
      - exec_in: |
          set -e
          for f in deb/*.deb; do
            ubuntu/usr/bin/dpkg-deb -X $f ubuntu | pv -lbnti 5 > /dev/null
          done
    - install_kernel_and_firmware:
      - exec_in: |
          set -e
          mkdir -p /boot /lib/modules /lib/firmware
          cp -av ubuntu/boot/Image /boot/$${kernel_filename}_$${l4t_kernel_version}-arm64
          cp -av ubuntu/lib/modules/$${l4t_kernel_version} /lib/modules/$${l4t_kernel_version}
          ln -snv /lib/modules/$${l4t_kernel_version} /lib/modules/$${l4t_kernel_version}-arm64
          cp -av ubuntu/lib/firmware/* /lib/firmware/
          mkinitramfs -v $${l4t_kernel_version}-arm64 -o /boot/initrd.img_$${l4t_kernel_version}-arm64
    - disable_nvidia_l4t_apt_source:
      - exec_in: sed -i -e "s/^/#/" /etc/apt/sources.list.d/nvidia-l4t-apt-source.list
export:
  - "@base"
