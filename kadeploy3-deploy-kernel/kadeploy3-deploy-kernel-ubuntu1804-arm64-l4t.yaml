#==============================================================================
# vim: softtabstop=2 shiftwidth=2 expandtab fenc=utf-8 cc=81 tw=80
#==============================================================================
#
# DESCRIPTION: Kadeploy3 ramdisk OS (used in the deployment phase) for ARM64
#
# Notes:
# - force use of busybox rather than klibc-utils (which breaks the mount)
#
#==============================================================================
---
extend: kadeploy3-deploy-kernel-bullseye-arm64.yaml

global:
  distrib: ubuntu
  release: focal
  release_number: 20.04
  deb_mirror_hostname: ports.ubuntu.com
  deb_mirror_directory: /ubuntu-ports
  deb_mirror_uri: http://$${deb_mirror_hostname}$${deb_mirror_directory}
  deb_components: "main restricted"
  security_release: $${release}
  deb_security_hostname: $${deb_mirror_hostname}
  deb_security_directory: $${deb_mirror_directory}
  security_release: $${release}-security

  ## System variables. Required by kameleon engine
  # Include specific steps
  include_steps:
    - $${distrib}/$${release}
    - $${distrib}
    - debian

  bootstrap_packages: initramfs-tools busybox-static gnupg dirmngr
  to_remove_packages: wget libpsl5
  use_backports: no
  arch_specific_packages: kexec-tools grub-efi-arm64 
  use_backports: false
  hwraid_release: $${release}
  #deb_kernel: default
  # -> other option: bpo - e.g. set on command line using "-g deb_kernel:bpo"
  deb_kernel: 
  kernel_filename: vmlinuz
  tmpfs_size: 1G
  firmware_packages: firmware-linux nvidia-l4t-firmware
  # haveged is used to provide more entropy during boot
  system_packages: ash systemd systemd-sysv haveged
  net_packages: ifupdown ntpdate isc-dhcp-client openssh-client openssh-server taktuk netcat
  linux_fs_packages: e2fsprogs xfsprogs btrfs-progs
  other_fs_packages: dosfstools #ntfs-3g 
  archive_file_packages: tar bzip2 xz-utils zstd
  disk_packages: hdparm parted fdisk
  ruby_packages: ruby ruby-net-ssh ruby-net-ssh-multi ruby-daemons
  ruby_packages_bpo:
  to_remove_packages:
  target_directory: /grid5000/kadeploy-kernels

  in_context:
    cmd: ssh -F $${ssh_config_file} $${kameleon_recipe_name} -t chroot $${rootfs} /usr/bin/qemu-$${arch}-static /bin/bash
    workdir: /root/kameleon_workdir
    proxy_cache: $${local_ip}

bootstrap:
  - "@base"

setup:
  - nvidia_l4t_specific:
    - install_ca_certificates:
      - exec_in: apt-get install -y --force-yes ca-certificates wget
    - add_nvidia_sources:
      - exec_in: wget https://repo.download.nvidia.com/jetson/t194/pool/main/n/nvidia-l4t-apt-source/nvidia-l4t-apt-source_35.1.0-20220810203728_arm64.deb
      - exec_in: mkdir -p tmp
      - exec_in: dpkg -x ./nvidia-l4t-apt-source_35.1.0-20220810203728_arm64.deb tmp
      - exec_in: mv -v tmp/etc/apt/trusted.gpg.d/* /etc/apt/trusted.gpg.d/
      - exec_in: mv -v tmp/etc/apt/souces.list.d/* /etc/apt/sources.list.d/
      - exec_in: sed -i -e 's/<soc>/t194/' /etc/apt/sources.list.d/nvidia-l4t-apt-source.list
    - update_packages_list:
      - exec_in: apt-get update
    - install_kernel:
      - exec_in: apt-get download nvidia-l4t-kernel nvidia-l4t-kernel-headers
      - exec_in: mkdir -p tmp
      - exec_in: dpkg -x nvidia-l4t-kernel_*.deb tmp
      - exec_in: dpkg -x nvidia-l4t-kernel-headers_*.deb tmp
      - exec_in: mkdir -p /boot /usr/src /lib/modules
      - exec_in: mv -v tmp/boot/* /boot/
      - exec_in: mv -v tmp/usr/src/* /usr/src/
      - exec_in: mv -v tmp/lib/modules/* /lib/modules/
  - breakpoint:
    - breakpoint:
      - breakpoint
  - "@base"

export:
  - "@base"
