enabled?:
  - exec_local: test ! -f $${checkpoint_disabled_file}
  - exec_local: test -S $${qemu_monitor_socket}

create:
  - exec_local: |
      set -e -o pipefail
      echo -e "savevm @microstep_id" | socat -t$${qemu_checkpoint_timeout} - UNIX-CONNECT:$${qemu_monitor_socket} > /dev/null

apply:
  - exec_local: |
      set -e
      [ ! -f "$${kameleon_cwd}/vm_state_to_load.txt" ] || rm -f $${kameleon_cwd}/vm_state_to_load.txt
      if [ -f "$${image_disk}.$${image_format}" ] ; then
        checkpoints=( $(qemu-img snapshot -l $${image_disk}.$${image_format} | tail -n +3 | awk '{print $2}') )
        for checkpoint in "${checkpoints[@]}"; do
          if [ -f "$${kameleon_cwd}/vm_state_to_load.txt" ]; then
            echo "Removing old checkpoint $checkpoint"
            qemu-img snapshot -d $checkpoint $${image_disk}.$${image_format}
          fi
          if [ "$checkpoint" == "@microstep_id" ]; then
              echo "@microstep_id" > $${kameleon_cwd}/vm_state_to_load.txt
              qemu-img snapshot -a $checkpoint $${image_disk}.$${image_format}
          fi
        done
      fi

clear:
  - exec_local: rm -f $${image_disk}.$${image_format}

list:
  - exec_local: |
      set -e
      if [ -f "$${image_disk}.$${image_format}" ] ; then
          qemu-img snapshot -l $${image_disk}.$${image_format} | tail -n +3 | awk '{print $2}'
      fi
