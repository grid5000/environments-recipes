#==============================================================================
# vim: softtabstop=2 shiftwidth=2 expandtab fenc=utf-8 cc=81 tw=80
#==============================================================================
#
# DESCRIPTION: Base template for Archlinux appliance.
#
#==============================================================================
---
# Loads some helpful aliases (this files are located in steps/aliases/ directory)
aliases: defaults.yaml

# Custom shell environement (this files are located in steps/env/ directory)
env:
  - bashrc
  - functions.sh

# Global variables use by Kameleon engine and the steps
global:
  ## User varibales : used by the recipe
  user_name: kameleon
  user_password: $${user_name}
  root_password: $${user_name}
  user_groups: sudo
  default_keyboard_layout: "us,fr,de"
  default_locales: POSIX C en_US fr_FR de_DE
  default_lang: en_US.UTF-8
  default_timezone: UTC
  appliance_tar_compression_level: "9"

  ## Initial rootfs archive built with kameleon
  ## See https://github.com/oar-team/kameleon-bootstrap-recipes.git
  rootfs_archive_url: http://kameleon.imag.fr/rootfs/$${arch}/$${distrib}$${release_number}_$${bootstrap_image_version}.tar.xz
  rootfs_archive_download_path: $${kameleon_cwd}/rootfs.tar.xz
  # rootfs options
  rootfs: $${kameleon_cwd}/rootfs

  # Distribution
  arch: x86_64
  hostname: kameleon-$${distrib}

  # appliance options
  filesystem_type: ext4
  image_size: 10G
  image_format: qcow2
  image_disk: $${kameleon_cwd}/base_$${kameleon_recipe_name}
  # Allowed formats are: tar.gz, tar.bz2, tar.xz, tar.lzo, qcow, qcow2, qed, vdi, raw, vmdk
  appliance_formats: qcow2 tar.gz
  appliance_filename: "$${kameleon_cwd}/$${kameleon_recipe_name}"
  appliance_tar_excludes: >-
    ./etc/fstab ./root/.bash_history ./root/kameleon_workdir ./root/.ssh
    ./var/tmp/* ./tmp/* ./var/log/* ./dev/* ./proc/* ./run/*
    ./sys/*

  ## System variables. Required by kameleon engine
  # Include specific steps
  include_steps:
    - $${distrib}/$${release}
    - $${distrib}

  # Shell session from where we launch exec_out commands. There is often a
  # local bash session, but it can be a remote shell on other machines or on
  # any shell. (eg. bash, chroot, fakechroot, ssh, tmux, lxc...)
  out_context:
    cmd: bash
    workdir: $${kameleon_cwd}
    proxy_cache: 127.0.0.1

  # Shell session that allows us to connect to the building machine in order to
  # configure it and setup additional programs
  in_context:
    cmd: USER=root HOME=/root LC_ALL=POSIX chroot $${rootfs} bash
    workdir: /root/kameleon_workdir
    proxy_cache: 127.0.0.1

  # E.g: net.ifnames=0 console=tty0 console=ttyS0,115200n8
  kernel_args: "quiet net.ifnames=0 biosdevname=0"

# Bootstrap the new system and create the 'in_context'
bootstrap:
  - enable_checkpoint
  - prepare_chroot
  - start_chroot

# Install and configuration steps
setup:
  # Install
  - upgrade_system
  - install_software:
    - packages: $${setup_packages}
  # Configuration
  - configure_system:
    - locales: $${default_locales}
    - lang: $${default_lang}
    - timezone: $${default_timezone}
  - configure_keyboard:
    # set to english keyboard use 'localectl list-keymaps' to see available list
    - layout: $${default_keyboard_layout}
  - configure_network
  - kameleon_customization
  - create_user:
    - name: $${user_name}
    - groups: $${user_groups}
    - password: $${user_name}
  - clean_system

# Export the generated appliance in the format of your choice
export:
  - disable_checkpoint
  - save_appliance:
    - output_filename: $${appliance_filename}
    - output_formats: $${appliance_formats}
    - tar_compression_level: $${appliance_tar_compression_level}
    - tar_excludes: $${appliance_tar_excludes}
