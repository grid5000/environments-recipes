workflow:
  # NOTE: only run the pipeline when pushing a commit/tag/branch, or when
  # creating the pipeline in the UI.
  # This allows to avoid duplicated pipelines in merge requests.
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "api"

stages:
  - dryrun
  - setup
  - environments

# NOTE: the general workflow for changing this is to manually create a pipeline.
# See https://www.grid5000.fr/w/TechTeam:Environment-recipes.
# Alternatively you can *temporarily* hardcode some values here, while working
# on something specific. Remember to remove the commit ;)
variables:
  REFREPO_BRANCH:
    description: The refrepo branch you want to use for the pipeline
    value: master
  ENVIRONMENTS:
    description: A regexp of environments to build
  CLUSTERS:
    description: The coma separated list of clusters to test automatically
  ENABLE_UNUSED_GEN_JOBS:
    description: Should non-matching generation job be created? Leave blank to avoid generation.
  ENABLE_UNUSED_TEST_JOBS:
    description: Should non-matching test job be created? Leave blank to avoid generation.
  ENVIRONMENTS_LIST:
    description: An explicit list of environments to build

clone-refrepo:
  stage: setup
  image: ${CI_REGISTRY}/grid5000/docker/g5k-debian:bullseye
  tags:
    - grid5000-docker
  needs: []
  rules:
    # If variables are filled then just start, otherwise wait for user input.
    - if: '$ENVIRONMENTS != "" || $CLUSTERS != "" || $ENVIRONMENTS_LIST != ""'
    # There is no alternative, we don't show up the job if these variables are
    # not set. Read the documentation in TechTeam:Environment-recipes to learn
    # about manually creating a pipeline for this.
  script:
    - echo ${REFREPO_BRANCH}
    - git clone https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.inria.fr/grid5000/reference-repository.git --depth 1 -b ${REFREPO_BRANCH}
  artifacts:
    paths:
      - reference-repository

# NOTE: this is a standalone job because gitlab requires <5MB artifacts for
# dynamic child pipelines.
gen-child-pipelines:
  stage: setup
  image: ${CI_REGISTRY}/grid5000/docker/g5k-debian:bullseye
  tags:
    - grid5000-docker
  needs:
    - clone-refrepo
  rules:
    - if: '$ENVIRONMENTS != "" || $CLUSTERS != "" || $ENVIRONMENTS_LIST != ""'
  variables:
    RUBYLIB: reference-repository/lib
  script:
    - rm -rf generated && mkdir generated
    - ruby ci/gitlab/gen_jobs.rb -o generated
  artifacts:
    paths:
      - generated

environments-pipeline:
  stage: environments
  needs:
    - gen-child-pipelines
  rules:
    - if: '$ENVIRONMENTS != "" || $CLUSTERS != "" || $ENVIRONMENTS_LIST != ""'
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID
  trigger:
    strategy: depend
    include:
      - artifact: generated/main.yml
        job: gen-child-pipelines

include:
  - 'ci/gitlab/sanity.yml'
